"use strict";const setManpowerRequestTimeline=(e,i)=>{let a=[];const t=i.request_status,m=i.rejected_at,n=i.created_at,s=i.manpower_request_by,l=formatName("F M. L, S",{firstName:s.first_name,middleName:s.middle_name,lastName:s.last_name,suffixName:s.suffix_name});a.push({icon:"edit",iconTheme:"info",dateTime:n,timelineTitle:"Created",timelineBody:`\n            <div class="small mb-3">This request has been created by <b>${l}</b></div>\n            ${TEMPLATE.SUBTEXT(formatDateTime(n,"Full Date"))}\n            ${TEMPLATE.SUBTEXT(formatDateTime(n,"Time"))}\n        `});const T=i.signed_at;if(isEmptyOrNull(T)){if("Rejected for signing"===t){const e=i.manpower_request_rejected_by,t=formatName("F M. L, S",{firstName:e.first_name,middleName:e.middle_name,lastName:e.last_name,suffixName:e.suffix_name});a.push({icon:"times",iconTheme:"danger",dateTime:m,timelineTitle:"Rejected",timelineBody:`\n                <div class="small mb-3">This request has been rejected for signing by <b>${t}</b></div>\n                ${TEMPLATE.SUBTEXT(formatDateTime(m,"Full Date"))}\n                ${TEMPLATE.SUBTEXT(formatDateTime(m,"Time"))}\n            `})}}else{const e=i.manpower_request_signed_by,t=formatName("F M. L, S",{firstName:e.first_name,middleName:e.middle_name,lastName:e.last_name,suffixName:e.suffix_name});a.push({icon:"file-signature",iconTheme:"primary",dateTime:T,timelineTitle:"Signed",timelineBody:`\n                <div class="small mb-3">This request has been signed by <b>${t}</b></div>\n                ${TEMPLATE.SUBTEXT(formatDateTime(T,"Full Date"))}\n                ${TEMPLATE.SUBTEXT(formatDateTime(T,"Time"))}\n            `})}const d=i.reviewed_at;if(isEmptyOrNull(d)){if("Rejected for approval"===t){const e=i.manpower_request_rejected_by,t=formatName("F M. L, S",{firstName:e.first_name,middleName:e.middle_name,lastName:e.last_name,suffixName:e.suffix_name});a.push({icon:"times",iconTheme:"danger",dateTime:m,timelineTitle:"Rejected",timelineBody:`\n                <div class="small mb-3">This request has been rejected for approval by <b>${t}</b></div>\n                ${TEMPLATE.SUBTEXT(formatDateTime(m,"Full Date"))}\n                ${TEMPLATE.SUBTEXT(formatDateTime(m,"Time"))}\n            `})}}else{const e=i.manpower_request_reviewed_by,t=formatName("F M. L, S",{firstName:e.first_name,middleName:e.middle_name,lastName:e.last_name,suffixName:e.suffix_name});a.push({icon:"thumbs-up",iconTheme:"success",dateTime:d,timelineTitle:"Approved",timelineBody:`\n                <div class="small mb-3">This request has been reviewed and approved by <b>${t}</b></div>\n                ${TEMPLATE.SUBTEXT(formatDateTime(d,"Full Date"))}\n                ${TEMPLATE.SUBTEXT(formatDateTime(d,"Time"))}\n            `})}const o=i.completed_at;isEmptyOrNull(o)||a.push({icon:"check",iconTheme:"info",dateTime:o,timelineTitle:"Completed",timelineBody:`\n                <div class="small mb-3">This request had been marked as completed</b></div>\n                ${TEMPLATE.SUBTEXT(formatDateTime(o,"Full Date"))}\n                ${TEMPLATE.SUBTEXT(formatDateTime(o,"Time"))}\n            `}),setTimeline(e,{title:"Manpower Request Timeline",timelineData:a})},setApplicantTimeline=(e,i)=>{let a=[];const t=i.created_at,m=formatName("F M. L, S",{firstName:i.first_name,middleName:i.middle_name,lastName:i.last_name,suffixName:i.suffix_name});a.push({icon:"file-export",iconTheme:"primary",dateTime:t,timelineTitle:"Applied",timelineBody:`\n            <div class="small mb-3">Application was submitted by <b>${m}</b></div>\n            ${TEMPLATE.SUBTEXT(formatDateTime(t,"Full Date"))}\n            ${TEMPLATE.SUBTEXT(formatDateTime(t,"Time"))}\n        `});const n=i.evaluated_at,s=i.evaluation_done_by;if(!isEmptyOrNull(n)&&!isEmptyOrNull(s)){const e=formatName("F M. L, S",{firstName:s.first_name,middleName:s.middle_name,lastName:s.last_name,suffixName:s.suffix_name});a.push({icon:"check",iconTheme:"success",dateTime:n,timelineTitle:"Evaluated",timelineBody:`\n                <div class="small mb-3">Evaluation was done by <b>${e}</b></div>\n                ${TEMPLATE.SUBTEXT(formatDateTime(n,"Full Date"))}\n                ${TEMPLATE.SUBTEXT(formatDateTime(n,"Time"))}\n            `})}const l=i.screened_at,T=i.screening_done_by;if(!isEmptyOrNull(l)&&!isEmptyOrNull(T)){const e=formatName("F M. L, S",{firstName:T.first_name,middleName:T.middle_name,lastName:T.last_name,suffixName:T.suffix_name});a.push({icon:"check",iconTheme:"warning",dateTime:l,timelineTitle:"Screened",timelineBody:`\n                <div class="small mb-3">Screening was done by <b>${e}</b></div>\n                ${TEMPLATE.SUBTEXT(formatDateTime(l,"Full Date"))}\n                ${TEMPLATE.SUBTEXT(formatDateTime(l,"Time"))}\n            `})}const d=i.hired_at,o=i.hiring_done_by;if(!isEmptyOrNull(d)&&!isEmptyOrNull(o)){const e=formatName("F M. L, S",{firstName:o.first_name,middleName:o.middle_name,lastName:o.last_name,suffixName:o.suffix_name});a.push({icon:"handshake",iconTheme:"success",dateTime:d,timelineTitle:"Hired",timelineBody:`\n                <div class="small mb-3">Hiring was done by <b>${e}</b></div>\n                ${TEMPLATE.SUBTEXT(formatDateTime(d,"Full Date"))}\n                ${TEMPLATE.SUBTEXT(formatDateTime(d,"Time"))}\n            `})}const r=i.status;if("Rejected from evaluation"===r||"Rejected from screening"===r||"Rejected from interview"===r){const e=i.rejected_at,t=i.rejection_done_by;if(!isEmptyOrNull(e)&&!isEmptyOrNull(t)){const m=formatName("F M. L, S",{firstName:t.first_name,middleName:t.middle_name,lastName:t.last_name,suffixName:t.suffix_name});a.push({icon:"times",iconTheme:"danger",dateTime:e,timelineTitle:r,timelineBody:`\n                    <div class="small mb-1">Applicant was ${r.toLowerCase()} by <b>${m}</b></div>\n                    <div class="small mb-3"><span class="text-danger font-weight-bold mr-1">Remarks:</span>${i.remarks}</div>\n                    ${TEMPLATE.SUBTEXT(formatDateTime(e,"Full Date"))}\n                    ${TEMPLATE.SUBTEXT(formatDateTime(e,"Time"))}\n                `})}}setTimeline(e,{title:"Applicant Timeline",timelineData:a})},getOnboardingEmployeeTaskStatus=(e,i,a,t)=>{switch(e){case"Pending":return isAfterToday(i)&&isAfterToday(a)?TEMPLATE.BADGE("secondary",TEMPLATE.ICON_LABEL("stopwatch","Soon")):isBeforeToday(i)&&isAfterToday(a)?TEMPLATE.BADGE("warning",TEMPLATE.ICON_LABEL("exclamation-circle","Pending (Must working)")):TEMPLATE.BADGE("danger",TEMPLATE.ICON_LABEL("exclamation-triangle","Pending (Not worked)"));case"On Going":return isAfterToday(a)?TEMPLATE.BADGE("danger",TEMPLATE.ICON_LABEL("sync-alt","On Going")):TEMPLATE.BADGE("warning",TEMPLATE.ICON_LABEL("sync-alt","On Going (Must be done)"));case"Completed":return moment(t).isBefore(moment(a))?TEMPLATE.BADGE("success",TEMPLATE.ICON_LABEL("check","Completed (On Time)")):TEMPLATE.BADGE("success",TEMPLATE.ICON_LABEL("check","Completed (Late)"));default:return TEMPLATE.BADGE("light","Invalid data")}},setJobPostTimeline=(e,i)=>{let a=[];const t=i.job_posted_by,m=formatName("F M. L, S",{firstName:t.first_name,middleName:t.middle_name,lastName:t.last_name,suffixName:t.suffix_name}),n=i.created_at;a.push({icon:"edit",iconTheme:"info",dateTime:n,timelineTitle:"Created",timelineBody:`\n            <div class="small mb-3">You, <span class="font-weight-bold">${m}</span>, created this job post</div>\n            ${TEMPLATE.SUBTEXT(formatDateTime(n,"Full Date"))}\n            ${TEMPLATE.SUBTEXT(formatDateTime(n,"Time"))}\n        `});const s=i.updated_at;a.push({icon:"edit",iconTheme:"info",dateTime:s,timelineTitle:"Last Updated",timelineBody:`\n            <div class="small mb-3">You are the last person updated this job post</div>\n            ${TEMPLATE.SUBTEXT(formatDateTime(s,"Full Date"))}\n            ${TEMPLATE.SUBTEXT(formatDateTime(s,"Time"))}\n        `}),setTimeline(e,{title:"Job Post Timeline",timelineData:a})},setOnboardingEmployeeTaskTimeline=(e,i)=>{let a=[];const t=i.created_at,m=i.onboarding_employee_task_assigned_by,n=formatName("F M. L, S",{firstName:m.first_name,middleName:m.middle_name,lastName:m.last_name,suffixName:m.suffix_name});a.push({icon:"clipboard",iconTheme:"primary",dateTime:t,timelineTitle:"Assigned",timelineBody:`\n            <div class="small mb-3">Task was created and assigned by <b>${n}</b></div>\n            ${TEMPLATE.SUBTEXT(formatDateTime(t,"Full Date"))}\n            ${TEMPLATE.SUBTEXT(formatDateTime(t,"Time"))}\n        `});const s=i.completed_at,l=i.onboarding_employee_task_completed_by;if(!isEmptyOrNull(s)&&!isEmptyOrNull(l)){const e=formatName("F M. L, S",{firstName:l.first_name,middleName:l.middle_name,lastName:l.last_name,suffixName:l.suffix_name});a.push({icon:"check",iconTheme:"success",dateTime:s,timelineTitle:"Completed",timelineBody:`\n                <div class="small mb-3">Task was completed marked by <b>${e}</b></div>\n                ${TEMPLATE.SUBTEXT(formatDateTime(s,"Full Date"))}\n                ${TEMPLATE.SUBTEXT(formatDateTime(s,"Time"))}\n            `})}setTimeline(e,{title:"Onboarding Task Timeline",timelineData:a})};